# serverless.yml

service: cpas-bff-service

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  profile: cpas

functions:
  login:
    handler: index.handler
    events:
      - http:
          path: /login
          method: post
          cors: true
  
  bff:
    handler: app.handler
    events:
      - http:
          path: /home
          method: get
          cors: true
          authorizer :
            arn: arn:aws:lambda:us-east-1:821454261790:function:cpas-jwt-token-verifier-dev-cpas-jwt-token-verifier
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: '.*'
      - http:
          path: /agreement/{id}
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                id: true #check whether not needed
          authorizer :
            arn: arn:aws:lambda:us-east-1:821454261790:function:cpas-jwt-token-verifier-dev-cpas-jwt-token-verifier
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: '.*'
      - http:
          path: /agreement
          method: post
          cors: true
          authorizer :
            arn: arn:aws:lambda:us-east-1:821454261790:function:cpas-jwt-token-verifier-dev-cpas-jwt-token-verifier
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: '.*'
      
resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          # gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
        ResponseTemplates:
          application/json: "{\"error\":{\"code\":\"401-unauthorized\",\"message\":$context.error.messageString},\"requestId\":\"$context.requestId\"}"
